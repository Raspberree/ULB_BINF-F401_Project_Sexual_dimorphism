---
title: Quantification of human sexual dimorphism with the dimorphism index in subcutaneous adipose tissue
format: 
  pdf:
    colorlinks: true 
    include-in-header:
      text: |
       \usepackage[font=small,labelfont={bf,small}, format=plain]{caption}
    
author: 
  - Youmna Ayadi
  - Kevin Straatman
date: today 

geometry:                             
  - top=25mm
  - bottom=25mm
  - right=20mm
  - left=20mm
fontsize: 12pt

df-print: kable

knitr:
  opts_chunk: 
    echo: false
    tidy: styler
    fig.align: center
    fig-width: 9
    fig-asp: 0.65
    
toc: true
toc-depth: 3
number-sections: true
            
editor: source 
---
```{r}
#| include: false
library(tidyverse)
library(magrittr)
library(gt)
library(ggrepel)
library(patchwork)
library(DESeq2) # BiocManager::install("DESeq2")
library(pheatmap)
library(scales)
library(GGally) # install.packages("GGally")
library(viridis)
library(VennDiagram)
library(corrplot)
library(fgsea)

#library(clusterProfiler) #BiocManager::install("clusterProfiler")

options(knitr.kable.NA = '', digits = 3) # For table formating

flog.threshold(ERROR) # To not have *.log files created when plotting venn diagrams
```

```{r}
#| include: false
# customizations
theme_set(theme_light())

default_col <-  hue_pal()(4)[4]
```

```{r}
# Custom functions
# Function to process reactome pathway names
process_strings <- function(x) {
  x <- gsub("_", " ", x)          # Replace underscores with spaces
  #x <- tolower(x)                 # Convert to lower case
  x <- sub("^\\S+\\s+", "", x)    # Remove the first word
  return(x)
}

# Customized volcano plot
volcano_plot <- function(data, title){
  alpha <- 0.05
  
  data <- data |> 
    as.data.frame() |> 
    rownames_to_column("gene_id")
    
  
  data <- data |> filter(!is.na(pvalue))
  
  data <- data |> 
    arrange(padj) |>
    mutate(rank = row_number()) 
  
  # all genes are set to non-significant by default
  data$category <- "NS"
  
  # Significant genes + up/down-regulated
  data$category[data$padj < alpha & data$log2FoldChange < 0] <- "Down"
  data$category[data$padj < alpha & data$log2FoldChange > 0] <- "Up"
  
  data$category <- factor(data$category)
  
  counts <- c(
    "Down" = sum(data$category == "Down"),
    "NS" = sum(data$category == "NS"),
    "Up" = sum(data$category == "Up")) |> 
    as.character()
  
  # Plot colors
  plot_cols <- c("Down" =  hue_pal()(2)[1],
                 "NS" = "grey",
                 "Up" =  hue_pal()(2)[2])
  
  # Creating the volcano plot
  plot <- data |> ggplot(aes(x = log2FoldChange, y = -log10(pvalue), color = category)) +
    geom_point(alpha = 0.7) +
    geom_vline(xintercept = c(-1, 0, 1), col = "gray", linetype = "dashed") +
    # Name added to the plot for the 20 genes with lowest adjusted p-values
    ggrepel::geom_text_repel(
      data = data |> filter(rank <= 20, padj < rank),
      aes(label = gene_id),
      size = 3,
      show.legend = FALSE,
      max.overlaps = getOption("ggrepel.max.overlaps", default = 30)) + 
    scale_color_manual(values = plot_cols, labels = counts, name = "") +
    labs(title = title,
         x = expression("log"[2]*"Fold Change"),  
         y = expression("-log"[10]*"(p-value)")) +
    
    geom_hline(yintercept = -log10(alpha), linetype = "dashed", col = "grey") +
    theme_light() +
    theme(legend.position = "bottom")
    
    
    return(plot)
}


# Plot of the GSEA results (Significantly up- or down-regulated pathways)
gsea_res_plots <- function(fgsea_results, alpha = 0.05){
  topPathwaysUp <- fgsea_results |> filter(ES > 0 & padj < alpha)
  topPathwaysDown <- fgsea_results |> filter(ES < 0 & padj < alpha)

  # Plots of the results
  plot_up <- topPathwaysUp |> 
    mutate(pathway = pathway |> process_strings() |>  str_wrap(width = 40) ) |> 
    ggplot(aes(reorder(pathway, NES), NES)) +
      geom_col(fill = hue_pal()(2)[2]) +
      coord_flip() +
      labs(x="Pathway", y="Normalized Enrichment Score",
           title="Top upregulated Reactome pathways") 
  
  plot_down <- topPathwaysDown |> 
    mutate(pathway = pathway |> process_strings() |>  str_wrap(width = 40) ) |> 
    ggplot(aes(reorder(pathway, NES), NES)) +
      geom_col(fill = hue_pal()(2)[1]) +
      coord_flip() +
      labs(x="Pathway", y="Normalized Enrichment Score",
           title="Top upregulated Reactome pathways") 

  return (plot_up + plot_down)

}
```



```{r}
# Importing and pre-processing the data

RNA_counts_adjusted <- read.csv("data/RNA_counts_adjusted.csv", 
                                header = TRUE, row.names = 1)

covariates_original <- read.csv("data/covariates.csv", header = TRUE)

# Copy of the covariates data that we can modify
covariates <- covariates_original

# Replace the "." in column of so `RNA_counts_adjusted` so that they match the `SUBJID`from `covariates`.
colnames(RNA_counts_adjusted) <- gsub(".", "-", colnames(RNA_counts_adjusted), fixed = TRUE)

# Replace SEX column by "M" for male, and "F" for female
covariates$SEX[covariates$SEX == "1"] <- "M"
covariates$SEX[covariates$SEX == "2"] <- "F"

# Replace the blank PATHOLOGY_CATEGORIES by something more explicit
covariates$PATHOLOGY_CATEGORIES[covariates$PATHOLOGY_CATEGORIES == ""] <- "unspecified"

# AGE_DECADE: replace by a number instead? --> ex: 60-69 -> we should probably replace by 65 (if we assume that the age in that range is normally distributed)
age_continuous <- substr(covariates$AGE_DECADE, start = 1, stop = 1) |> 
  paste0("5") |> 
  as.numeric()

covariates <- covariates |> 
  mutate(AGE_CONTINUOUS = age_continuous)


# Replace the correct variables by factors:
covariates <- covariates |> 
  mutate(SEX = factor(SEX),
         HARDY_SCALE = factor(HARDY_SCALE),
         PATHOLOGY_CATEGORIES = factor(PATHOLOGY_CATEGORIES)
         )
```


# Abstract {#sec-abstract}

# Introduction {#sec-introduction}

# Methods {#sec-methods}
## Available Data and Preprocessing
The data at the basis of the analysis in this report is an RNA read count matrix containing RNA counts of `r nrow(RNA_counts_adjusted)` genes measured in postmortem subcutaneous adipose tissue of `r ncol(RNA_counts_adjusted)` donors. The raw data comes from the [GTEx project](https://www.gtexportal.org/home/) and the effect of technical covariates was "removed / normalized out" from the expression data. Those adjusted counts can be found in the `RNA_counts_adjusted.csv` file.

Additionally, clinical and technical data related to the samples are also available with pre-computed dimorphism indices in the `covariates.csv` file.

The sample donor's ages were discretized by decade. However, for the differential gene expression analysis (see @sec-methods_dge_analysis and @sec-dge_analysis) we considered this covariate to be a continuous variable and thus added an `AGE_CONTINUOUS` covariate which is 35 for the 30-39 decade, 45 for the 40-49 decade, etc.

All the analyses were performed with R (version 4.4.1 (2024-06-14)). For more details about the R version information, the OS and attached or loaded packages, see @sec-session_info.

CODE AVAILABILITY?

## PCA

To estimate the size factors and the vst (variance stabilizing transformation) with DESeq2: every gene contains at least one zero, cannot compute log geometric means. Solution: added a pseudo-count of 1 to every entry.

The we perform a variance stabilizing transformation using the `DESeq2 vst` function.

## Differential Gene Expression Analysis {#sec-methods_dge_analysis}

The differential gene expression (DGE) analysis was performed using `DESeq2` package. First, half of the genes with the lowest variability were filtered out. The variability was determined by computing the median absolute deviation (MAD), defined as the median of the absolute deviations from the data's median $\tilde{X} = \text{median}(X)$:

$$\text{MAD} = \text{median}(|X_i - \tilde{X}|)$$
with $X = {X_1, X_2, ..., X_n}$.

The Hardy scale and age were included as covariates in the model by using the following design: `~ HARDY_SCALE + AGE_CONTINUOUS + SEX + SEX:RNA_DI`. For a justification of this design, see @sec-descriptive_analysis.

Samples with missing values for the Hardy scale covariate were removed because variables in the design formula cannot contain missing values (NAs). Even though this decrease in sample size could lead to lower statistical power, this method was chosen since the number of samples with missing values is relatively small compared to the total number of samples (`r nrow(covariates)`) and because of its simplicity. The missing values represent `r (sum(is.na(covariates$HARDY_SCALE)) / nrow(covariates) |> round(2)) * 100`% of the total samples. Other, more sophisticated methods could have been used, such as replacing the missing values by the most common one (`HARDY_SCALE` = 0 with this data set), or creating a classifier model to predict the missing values using the other covariates (source?). We could also have replaced the "NA" value by a new category called "unknown". However, since there are only 12 samples in that category, and there quite a lot of variables in the design, we would risk having a low statistical power (very few degrees of freedom).

Afterwards, the continuous variables (`AGE_CONTINUOUS`, and `RNA_DI`) were centered and scaled to improve convergence of the generalized linear model (GLM), as recommended by `DESeq2`.

To identify genes associated with either the dimorphism indices, with sex or with age, the Wald significance test was used. To identify genes associated with the Hardy scale covariate, the likelihood ratio test was used instead (JUSTIFICATION).

Finally, Benjamini-Hochberg correction was applied to all the p-values to control the false discovery rate at a level of 0.05.

## Gene Set Enrichment Analysis (GSEA)
Gene Set Enrichment Analysis was performed to identify pathways associated with the dimorphism indices and with sex. To this end, the REACTOME gene sets were used (in the `c2.cp.reactome.v2024.1.Hs.symbols.gmt` file) with the `fgsea` R package. The genes tested for differential expression in @sec-dge_analysis were ranked by decreasing order of the log2 Fold Change (for male and female dimorphism indices, and sex). Gene sets with less than 15 genes were not tested (`minSize` argument of the `fgsea` function).

# Results {#sec-results}
## Descriptive Analysis {#sec-descriptive_analysis}

The distribution of all the covariates is shown in @fig-covariates_distribution. We first notice that the number of male sample donor's is twice that of female sample donor's. The two classes are therefore unbalanced (which could cause problems if we wanted to perform classification with the data?). The death classification, based on the Hardy scale, is "0" for the majority of donors, which corresponds to cases on a ventilator immediately before death. The second most common death classification is a Hardy scale of "2": the sudden unexpected deaths of people who had been reasonably healthy. Additionally, the vast majority of samples had unspecified pathology categories (missing values). The second most common pathology category was fibrosis.

Moreover, the majority of donors, regardless of sex, are in the 50-69 age range. The average RNA integrity number is `r mean(covariates$RNA_INTEGRITY_NUMBER)`, with a minimum at `r min(covariates$RNA_INTEGRITY_NUMBER)`, and seems to be similarly distributed regardless of the sex. (GOOD? REASONABLE?)

The ischemic time (i.e., "time from death or withdrawal of life-support until the time the sample is placed in a fixative solution or frozen") varies between `r min(covariates$ISCHEMIC_TIME)` minutes and `r max(covariates$ISCHEMIC_TIME)` minutes (`r min(covariates$ISCHEMIC_TIME) / 60` hours), with a mean of `r mean(covariates$ISCHEMIC_TIME)`. This variable also seems to be similarly distributed across the two sexes.

```{r}
f_mean_rna_di <- covariates |> filter(SEX == "F") |> select(RNA_DI) |> unlist() |> mean()
f_mean_histo_di <- covariates |> filter(SEX == "F") |> select(HISTO_DI) |> unlist() |> mean()

m_mean_rna_di <- covariates |> filter(SEX == "M") |> select(RNA_DI) |> unlist() |> mean()
m_mean_histo_di <- covariates |> filter(SEX == "M") |> select(HISTO_DI) |> unlist() |> mean()

f_var_rna_di <- covariates |> filter(SEX == "F") |> select(RNA_DI) |> unlist() |> var()
f_var_histo_di <- covariates |> filter(SEX == "F") |> select(HISTO_DI) |> unlist() |> var()

m_var_rna_di <- covariates |> filter(SEX == "M") |> select(RNA_DI) |> unlist() |> var()
m_var_histo_di <- covariates |> filter(SEX == "M") |> select(HISTO_DI) |> unlist() |> var()
```
Concerning the male and female dimorphism indices, we observe that the ones based the RNA-seq transcriptomes are similarly distributed between male and females. The female dimorphism index has a mean of `r f_mean_rna_di` and a variance of `r f_var_rna_di`, while the male dimorphism index has a mean of `r m_mean_rna_di` and a variance of `r m_var_rna_di`. Interestingly, the dimorphism indices calculated from histology profiles have a very different distribution. The male histology profile-based dimorphism index seems to have a bimodal distribution, with a mean of `r m_mean_histo_di` and a variance of `r m_var_histo_di`. The female histology profile-based dimorphism index has a mean of `r f_mean_histo_di` and a variance of `r f_var_histo_di`.

```{r}
#| label: fig-covariates_distribution
#| fig-cap: Distribution of the clinical and technical variables, and the dimorphism indices of the samples separated by sex (F = Female, M = Male). **(a)** Number of Female and Male subcutaneous adipose tissue sample donors. **(b)** Distribution of ages (in decades) of the donors. **(c)** Death classification of the samples' donors with the Hardy scale. **(d)** Distribution of the samples' RNA integrity numbers.  **(e)** Distribution of the samples' ischemic time. **(f)** Medical conditions diagnosed post-mortem from histology slides. **(g)** Distribution of the transcriptional dimorphism indices computed from whole RNA-seq transcriptomes. **(h)** Distribution of the dimorphism indices computed from AI-based histology profiles.
#| fig-asp: 1
#| fig-pos: "H"


plot_sex <- ggplot(covariates, aes(x = SEX,fill = SEX)) +
  geom_bar() +
  xlab("Sex")

plot_age_decade <- ggplot(covariates, aes(x = AGE_DECADE, fill = SEX)) +
  geom_bar(position = "dodge") +
  xlab("Age [years]") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10))

plot_hardy_scale <- ggplot(covariates, aes(x = HARDY_SCALE, fill = SEX)) +
  geom_bar(position = "dodge") +
  xlab("Hardy scale")

plot_rni <- ggplot(covariates, aes(x = RNA_INTEGRITY_NUMBER, fill = SEX)) +
  geom_histogram(bins = 20, position = "dodge") +
  xlab("RNA Integrity Number")

plot_ischemic_time <- ggplot(covariates, aes(x = ISCHEMIC_TIME, fill = SEX)) +
  geom_histogram(bins = 30, position = "dodge") +
  xlab("Ischemic time [minutes]")

plot_pathology_categories <- ggplot(covariates, aes(x = PATHOLOGY_CATEGORIES, fill = SEX)) +
  geom_bar(position = "dodge") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10)) +
  xlab("Pathology categories")

plot_histo_di <- ggplot(covariates, aes(x = HISTO_DI, fill = SEX)) +
  geom_histogram(position = "dodge", bins = 30) +
  xlab("Dimorphism indices from histology profiles")

plot_rna_di <- ggplot(covariates, aes(x = RNA_DI, fill = SEX)) +
  geom_histogram(bins = 30, position = "dodge") +
  xlab("Dimorphism indices from RNA-seq transcriptomes")


(plot_sex + plot_age_decade + plot_hardy_scale) / 
  (plot_rni + plot_ischemic_time) +
  (free(plot_pathology_categories) + (plot_histo_di / plot_rna_di)) +
  plot_annotation(tag_levels = "a") +
  plot_layout(guides = "collect")
```

@fig-correlation shows the Pearson correlation coefficients between each continuous clinical and technical covariates. It also shows the pairwise scatter plots of those variables. We observe that the RNA- and histology-based dimorphism indices are significantly correlated with one another, even though the correlation is quite low. Since the two indices measure the same "phenomenon", it is expected to observe a positive correlation between those variables. However, the low value of this correlation could indicate that there is a high error in one or both measurements of the dimorphism indices, that the two variables do not measure exactly the same "information", or something else. From the pairwise scatter plot, however, it does not appear that the low correlation is due to a nonlinear relationship between the two indices.

We also notice that the age is negatively correlated with the RNA integrity number (RIN) and positively correlated with the ischemic time. The latter variable is negatively correlated with the RNA integrity number. This result is easily interpretable: the RIN is a measure of RNA quality in the sample. If the ischemic time is large, the sample has more time to "degrade", thus decreasing the RNA integrity.

```{r}
#| label: fig-correlation
#| fig-cap: Pairs plot of the continuous clinical and technical covariates for the samples separated by sex. The lower diagonal shows the scatter plots of each pair of variables. The upper diagonal indicates the Pearson correlation coefficients of the variabes considering all the samples (grey), or for the samples separated by sex (F = Female, M = Male). Statistical significance of the correlation is indicated by an asterisk (*** for p-value p < 0.001, ** for p < 0.01, * for p < 0.05, and . for p < 0.10).
#| fig-asp: 0.8
#| fig-pos: "H"


covariates |>
  select(AGE_CONTINUOUS, RNA_INTEGRITY_NUMBER, ISCHEMIC_TIME, HISTO_DI, RNA_DI) |> 
  ggpairs(aes(col = covariates$SEX, alpha = 0.5), 
          progress = FALSE,
          diag = NULL)
```


Are some technical variables possibly confounding dimorphism indices and
clinical variables ?

```{r}
#| label: fig-pca_sex
#| fig-cap: PCA representing 500 most variable genes
#| out-width: "50%"
#| message: false
#| fig-pos: "H"

mt <- match(colnames(RNA_counts_adjusted), covariates$SUBJID)

RNA_counts_ds <- DESeqDataSetFromMatrix(
  countData = RNA_counts_adjusted + 1,
  colData = covariates[mt, ],
  design = ~ 1 # no design yet, as we have to determine the confounding factors
)

vst_counts <- vst(RNA_counts_ds)

pca_sex <- plotPCA(vst_counts, intgroup = c("SEX"), ntop = 500) +
  coord_fixed() +
  aes(alpha = 0.8) +
  scale_color_discrete(name = "Sex")

pca_sex
```


```{r}
#| label: fig-pca_rna_di
#| fig-cap: PCA representing 500 most variable genes
#| out-width: "80%"
#| message: false
#| fig-pos: "H"


PCA_rnadi_M <- vst_counts[,colData(vst_counts)$SEX == "M"] |> 
  plotPCA(intgroup = c("RNA_DI"), ntop = 500) +
  scale_color_continuous(type = "viridis", name = "RNA DI") +
  coord_fixed() +
  ggtitle("Males")

PCA_rnadi_F <- vst_counts[,colData(vst_counts)$SEX == "F"] |> 
  plotPCA(intgroup = c("RNA_DI"), ntop = 500) +
  scale_color_continuous(type = "viridis", name = "RNA DI") +
  coord_fixed() +
  ggtitle("Females")

PCA_rnadi_M + PCA_rnadi_F + plot_annotation(tag_levels = "a") + 
  plot_layout(guides = "collect")  & theme(legend.position = 'bottom')

```

```{r}

```



## Differential Gene Expression Analysis {#sec-dge_analysis}
## Interpretation of the DI-associated transcriptome
### Hormone Receptors Associated with the Dimorphism Indices and with Sex

### Gene Set Enrichment Analysis

# Discussion and Conclusion {#sec-discussion_and_conclusion}

# Annexes {#sec-annexes}
## Session Information {#sec-session_info}

```{r}
sessionInfo()
```


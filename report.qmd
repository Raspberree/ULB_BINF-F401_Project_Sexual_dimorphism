---
title: Quantification of human sexual dimorphism with the dimorphism index in subcutaneous adipose tissue
format: 
  pdf:
    colorlinks: true 
    include-in-header:
      text: |
       \usepackage[font=small,labelfont={bf,small}, format=plain]{caption}
    
author: 
  - Youmna Ayadi
  - Kevin Straatman
date: today 

geometry:                             
  - top=25mm
  - bottom=25mm
  - right=20mm
  - left=20mm
fontsize: 11pt

df-print: kable

knitr:
  opts_chunk: 
    echo: false
    tidy: styler
    fig.align: center
    fig-width: 9
    fig-asp: 0.65
    
toc: true
toc-depth: 3
number-sections: true

execute:
  cache: false
  warning: false
            
editor: source 
---
```{r}
#| include: false
library(tidyverse)
library(magrittr)
library(gt)
library(ggrepel)
library(patchwork)
library(DESeq2) # BiocManager::install("DESeq2")
library(pheatmap)
library(scales)
library(GGally) # install.packages("GGally")
library(viridis)
library(VennDiagram)
library(corrplot)
library(fgsea)

#library(clusterProfiler) #BiocManager::install("clusterProfiler")

options(knitr.kable.NA = '', digits = 3) # For table formating

flog.threshold(ERROR) # To not have *.log files created when plotting venn diagrams
```

```{r}
#| include: false
# customizations
theme_set(theme_light())

default_col <-  hue_pal()(4)[4]
```

```{r}
# Custom functions
# Function to process reactome pathway names
process_strings <- function(x) {
  x <- gsub("_", " ", x)          # Replace underscores with spaces
  #x <- tolower(x)                 # Convert to lower case
  x <- sub("^\\S+\\s+", "", x)    # Remove the first word
  return(x)
}

# Customized volcano plot
volcano_plot <- function(data, title){
  alpha <- 0.05
  
  data <- data |> 
    as.data.frame() |> 
    rownames_to_column("gene_id")
    
  
  data <- data |> filter(!is.na(pvalue))
  
  data <- data |> 
    arrange(padj) |>
    mutate(rank = row_number()) 
  
  # all genes are set to non-significant by default
  data$category <- "NS"
  
  # Significant genes + up/down-regulated
  data$category[data$padj < alpha & data$log2FoldChange < 0] <- "Down"
  data$category[data$padj < alpha & data$log2FoldChange > 0] <- "Up"
  
  data$category <- factor(data$category)
  
  counts <- c(
    "Down" = sum(data$category == "Down"),
    "NS" = sum(data$category == "NS"),
    "Up" = sum(data$category == "Up")) |> 
    as.character()
  
  # Plot colors
  plot_cols <- c("Down" =  hue_pal()(2)[1],
                 "NS" = "grey",
                 "Up" =  hue_pal()(2)[2])
  
  # Creating the volcano plot
  plot <- data |> ggplot(aes(x = log2FoldChange, y = -log10(pvalue), color = category)) +
    geom_point(alpha = 0.7) +
    geom_vline(xintercept = c(0), col = "gray", linetype = "dashed") +
    # Name added to the plot for the 20 genes with lowest adjusted p-values
    ggrepel::geom_text_repel(
      data = data |> filter(rank <= 20, padj < rank),
      aes(label = gene_id),
      size = 3,
      show.legend = FALSE,
      max.overlaps = getOption("ggrepel.max.overlaps", default = 30)) + 
    scale_color_manual(values = plot_cols, labels = counts, name = "") +
    labs(title = title,
         x = expression("log"[2]*"Fold Change"),  
         y = expression("-log"[10]*"(p-value)")) +
    
    geom_hline(yintercept = -log10(alpha), linetype = "dashed", col = "grey") +
    theme_light() +
    theme(legend.position = "bottom")
    
    
    return(plot)
}


# Plot of the GSEA results (Significantly up- or down-regulated pathways)
gsea_res_plots <- function(fgsea_results, alpha = 0.05, n = 10){
  topPathwaysUp <- fgsea_results |> filter(ES > 0 & padj < alpha)
  topPathwaysDown <- fgsea_results |> filter(ES < 0 & padj < alpha)

  # Plots of the results
  plot_up <- topPathwaysUp |> 
    slice_max(order_by = NES, n = n) |> 
    mutate(pathway = pathway |> process_strings() |>  str_wrap(width = 20) ) |> 
    ggplot(aes(reorder(pathway, NES), NES)) +
      scale_fill_viridis(option = "viridis", begin = 0, end = alpha) +
      geom_col(fill = hue_pal()(2)[2]) +
      coord_flip() +
      labs(x="Pathway", y="Normalized Enrichment Score") +
      theme(legend.position = "bottom", 
            axis.text = element_text(size = 8))
  
  plot_down <- topPathwaysDown |> 
    slice_min(order_by = NES, n = n) |>
    mutate(pathway = pathway |> process_strings() |>  str_wrap(width = 20) ) |> 
    ggplot(aes(reorder(pathway, NES), NES)) +
      geom_col(fill = hue_pal()(2)[1]) +
      coord_flip() +
      labs(x="Pathway", y="Normalized Enrichment Score") +
      theme(legend.position = "bottom",
            axis.text = element_text(size = 8))

  return (plot_up + plot_down)

}
```



```{r}
# Importing and pre-processing the data

RNA_counts_adjusted <- read.csv("data/RNA_counts_adjusted.csv", 
                                header = TRUE, row.names = 1)

covariates_original <- read.csv("data/covariates.csv", header = TRUE)

# Copy of the covariates data that we can modify
covariates <- covariates_original

# Replace the "." in column of so `RNA_counts_adjusted` so that they match the `SUBJID`from `covariates`.
colnames(RNA_counts_adjusted) <- gsub(".", "-", colnames(RNA_counts_adjusted), fixed = TRUE)

# Replace SEX column by "M" for male, and "F" for female
covariates$SEX[covariates$SEX == "1"] <- "M"
covariates$SEX[covariates$SEX == "2"] <- "F"

# Replace the blank PATHOLOGY_CATEGORIES by something more explicit
covariates$PATHOLOGY_CATEGORIES[covariates$PATHOLOGY_CATEGORIES == ""] <- "unspecified"

# AGE_DECADE: replace by a number instead? --> ex: 60-69 -> we should probably replace by 65 (if we assume that the age in that range is normally distributed)
age_continuous <- substr(covariates$AGE_DECADE, start = 1, stop = 1) |> 
  paste0("5") |> 
  as.numeric()

covariates <- covariates |> 
  mutate(AGE_CONTINUOUS = age_continuous)


# Replace the correct variables by factors:
covariates <- covariates |> 
  mutate(SEX = factor(SEX),
         HARDY_SCALE = factor(HARDY_SCALE),
         PATHOLOGY_CATEGORIES = factor(PATHOLOGY_CATEGORIES)
         )


# Remove NA hardy scale
non_na_samples <- !is.na(covariates$HARDY_SCALE)
n_na_samples <- is.na(covariates$HARDY_SCALE) |> sum()

covariates <- covariates[non_na_samples,]

RNA_counts_adjusted <- RNA_counts_adjusted[, non_na_samples]
```


# Introduction {#sec-introduction}

- Definition of the dimorphism indices.
- It is an exploratory analysis.
- Importance: diseases related to adipose tissue more prevalent in men or women.

# Methods {#sec-methods}
## Available Data and Preprocessing
The data at the basis of the analysis in this report is an RNA read count matrix containing RNA counts of `r nrow(RNA_counts_adjusted)` genes measured in postmortem subcutaneous adipose tissue of `r ncol(RNA_counts_adjusted)` donors. The raw data comes from the [GTEx project](https://www.gtexportal.org/home/) and the effect of technical covariates was "removed / normalized out" from the expression data. Those adjusted counts can be found in the `RNA_counts_adjusted.csv` file.

Additionally, clinical and technical data related to the samples are also available with pre-computed dimorphism indices in the `covariates.csv` file.

The sample donor's ages were discretized by decade. However, for the differential gene expression analysis (see @sec-methods_dge_analysis and @sec-dge_analysis) we considered this covariate to be a continuous variable and thus added an `AGE_CONTINUOUS` covariate which is 35 for the 30-39 decade, 45 for the 40-49 decade, etc.

Finally, `r n_na_samples` samples had missing values for the Hardy scale. For simplicity, we decided to remove to samples because there cannot be missing values in a variable used in the design of the `DESeq` function, used for differential gene expression analysis. Even though this decrease in sample size could lead to lower statistical power, this method was chosen since the number of samples with missing values is relatively small compared to the total number of samples (`r nrow(covariates_original)`) and because of its simplicity. Other, more sophisticated methods could have been used, such as replacing the missing values by the most common one (`HARDY_SCALE` = 0 with this data set), or creating a classifier model to predict the missing values using the other covariates (source?). We could also have replaced the "NA" value by a new category called "unknown". However, since there are only 12 samples in that category, and there quite a lot of variables in the design, we would risk having a low statistical power (very few degrees of freedom).


However, since there are only `r n_na_samples` samples in that category, and there quite a lot of variables in the design (see @sec-dge_analysis), we would risk having a low statistical power (few degrees of freedom).

All the analyses were performed with R (version 4.4.1 (2024-06-14)). For more details about the R version information, the OS and attached or loaded packages, see @sec-session_info.

CODE AVAILABILITY?

## PCA

To estimate the size factors and the vst (variance stabilizing transformation) with DESeq2: every gene contains at least one zero, cannot compute log geometric means. Solution: added a pseudo-count of 1 to every entry.

The we perform a variance stabilizing transformation using the `DESeq2 vst` function.

## Differential Gene Expression Analysis {#sec-methods_dge_analysis}

The differential gene expression (DGE) analysis was performed using `DESeq2` package. First, half of the genes with the lowest variability were filtered out. The variability was determined by computing the median absolute deviation (MAD), defined as the median of the absolute deviations from the data's median $\tilde{X} = \text{median}(X)$:

$$\text{MAD} = \text{median}(|X_i - \tilde{X}|)$$
with $X = {X_1, X_2, ..., X_n}$.

The Hardy scale and age were included as covariates in the model by using the following design: `~ HARDY_SCALE + AGE_CONTINUOUS + SEX + SEX:RNA_DI`. For a justification of this design, see @sec-descriptive_analysis.

Afterwards, the continuous variable `AGE_CONTINUOUS` was centered and scaled to improve convergence of the generalized linear model (GLM), as recommended by `DESeq2`. The `RNA_DI` variable was not centered nor scaled as the value `RNA_DI` = 0 has a biological meaning, and centering that variable would erase the meaning, especially since there are many more males than females in our data set.(Is the RNA_DI in log scale? If so, then 0 in log corresponds to 1 in not-log --> keeps biological meaning. Otherwise, having negative index doesn't make sense).

To identify genes associated with either the dimorphism indices, with sex or with age, the Wald significance test was used. To identify genes associated with the Hardy scale covariate, the likelihood ratio test was used instead (JUSTIFICATION + reduced = ~ AGE_CONTINUOUS + SEX + SEX:RNA_DI).

Finally, Benjamini-Hochberg correction was applied to all the p-values to control the false discovery rate at a level of 0.05.

## Gene Set Enrichment Analysis (GSEA)
Gene Set Enrichment Analysis was performed to identify pathways associated with the dimorphism indices and with sex. To this end, the REACTOME gene sets were used (in the `c2.cp.reactome.v2024.1.Hs.symbols.gmt` file) with the `fgsea` R package. The genes tested for differential expression in @sec-dge_analysis were ranked by decreasing order of the log2 Fold Change (for male and female dimorphism indices, and sex). Gene sets with less than 15 genes were not tested (`minSize` argument of the `fgsea` function).

# Results {#sec-results}
## Descriptive Analysis {#sec-descriptive_analysis}

The distribution of all the covariates is shown in @fig-covariates_distribution. The number of male sample donor's was twice that of female sample donor's. The two classes were therefore unbalanced (which could cause problems if we wanted to perform classification with the data?). The death classification, based on the Hardy scale, was "0" for the majority of donors, which corresponds to cases on a ventilator immediately before death. The second most common death classification was a Hardy scale of "2": the sudden unexpected deaths of people who had been reasonably healthy. Additionally, the vast majority of samples had unspecified pathology categories (missing values). The second most common pathology category was fibrosis.

Moreover, the majority of donors, regardless of sex, were in the 50-69 age range. The average RNA integrity number was `r mean(covariates$RNA_INTEGRITY_NUMBER)`, with a minimum at `r min(covariates$RNA_INTEGRITY_NUMBER)`, and seemed to be similarly distributed regardless of the sex. (GOOD? REASONABLE?)

The ischemic time (i.e., "time from death or withdrawal of life-support until the time the sample is placed in a fixative solution or frozen") varied between `r min(covariates$ISCHEMIC_TIME)` minutes and `r max(covariates$ISCHEMIC_TIME)` minutes (`r min(covariates$ISCHEMIC_TIME) / 60` hours), with a mean of `r mean(covariates$ISCHEMIC_TIME)`. This variable also seemed to be similarly distributed across the two sexes.

```{r}
f_mean_rna_di <- covariates |> filter(SEX == "F") |> select(RNA_DI) |> unlist() |> mean()
f_mean_histo_di <- covariates |> filter(SEX == "F") |> select(HISTO_DI) |> unlist() |> mean()

m_mean_rna_di <- covariates |> filter(SEX == "M") |> select(RNA_DI) |> unlist() |> mean()
m_mean_histo_di <- covariates |> filter(SEX == "M") |> select(HISTO_DI) |> unlist() |> mean()

f_var_rna_di <- covariates |> filter(SEX == "F") |> select(RNA_DI) |> unlist() |> var()
f_var_histo_di <- covariates |> filter(SEX == "F") |> select(HISTO_DI) |> unlist() |> var()

m_var_rna_di <- covariates |> filter(SEX == "M") |> select(RNA_DI) |> unlist() |> var()
m_var_histo_di <- covariates |> filter(SEX == "M") |> select(HISTO_DI) |> unlist() |> var()
```
Concerning the male and female dimorphism indices (in log scale???), we observe that the ones based the RNA-seq transcriptomes are similarly distributed between male and females. The female dimorphism index had a mean of `r f_mean_rna_di` and a variance of `r f_var_rna_di`, while the male dimorphism index had a mean of `r m_mean_rna_di` and a variance of `r m_var_rna_di`. Interestingly, the dimorphism indices calculated from histology profiles show a very different distribution. The male histology profile-based dimorphism index seems to have a bimodal distribution, with a mean of `r m_mean_histo_di` and a variance of `r m_var_histo_di`. The female histology profile-based dimorphism index had a mean of `r f_mean_histo_di` and a variance of `r f_var_histo_di`.

```{r}
#| label: fig-covariates_distribution
#| fig-cap: Distribution of the clinical and technical variables, and the dimorphism indices of the samples separated by sex (F = Female, M = Male). **(a)** Number of Female and Male subcutaneous adipose tissue sample donors. **(b)** Distribution of ages (in decades) of the donors. **(c)** Death classification of the samples' donors with the Hardy scale. **(d)** Distribution of the samples' RNA integrity numbers.  **(e)** Distribution of the samples' ischemic time. **(f)** Medical conditions diagnosed post-mortem from histology slides. **(g)** Distribution of the transcriptional dimorphism indices computed from whole RNA-seq transcriptomes. **(h)** Distribution of the dimorphism indices computed from AI-based histology profiles.
#| fig-asp: 1
#| fig-pos: "H"


plot_sex <- ggplot(covariates, aes(x = SEX,fill = SEX)) +
  geom_bar() +
  xlab("Sex")

plot_age_decade <- ggplot(covariates, aes(x = AGE_DECADE, fill = SEX)) +
  geom_bar(position = "dodge") +
  xlab("Age [years]") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10))

plot_hardy_scale <- ggplot(covariates, aes(x = HARDY_SCALE, fill = SEX)) +
  geom_bar(position = "dodge") +
  xlab("Hardy scale")

plot_rni <- ggplot(covariates, aes(x = RNA_INTEGRITY_NUMBER, fill = SEX)) +
  geom_histogram(bins = 20, position = "dodge") +
  xlab("RNA Integrity Number")

plot_ischemic_time <- ggplot(covariates, aes(x = ISCHEMIC_TIME, fill = SEX)) +
  geom_histogram(bins = 30, position = "dodge") +
  xlab("Ischemic time [minutes]")

plot_pathology_categories <- ggplot(covariates, aes(x = PATHOLOGY_CATEGORIES, fill = SEX)) +
  geom_bar(position = "dodge") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10)) +
  xlab("Pathology categories")

plot_histo_di <- ggplot(covariates, aes(x = HISTO_DI, fill = SEX)) +
  geom_histogram(position = "dodge", bins = 30) +
  xlab("Dimorphism indices from histology profiles")

plot_rna_di <- ggplot(covariates, aes(x = RNA_DI, fill = SEX)) +
  geom_histogram(bins = 30, position = "dodge") +
  xlab("Dimorphism indices from RNA-seq transcriptomes")


(plot_sex + plot_age_decade + plot_hardy_scale) / 
  (plot_rni + plot_ischemic_time) +
  (free(plot_pathology_categories) + (plot_histo_di / plot_rna_di)) +
  plot_annotation(tag_levels = "a") +
  plot_layout(guides = "collect")
```

@fig-correlation shows the Pearson correlation coefficients between each continuous clinical and technical covariates. It also shows the pairwise scatter plots of those variables. We observed that the RNA- and histology-based dimorphism indices were significantly correlated with one another, even though the correlation was quite low. Since the two indices measure the same "phenomenon", it was expected to observe a positive correlation between those variables. However, the low value of this correlation could indicate that there was a high error in one or both measurements of the dimorphism indices, that the two variables did not measure exactly the same "information", or something else. From the pairwise scatter plot, however, it does not appear that the low correlation was due to a nonlinear relationship between the two indices.

We also noticed that the age was negatively correlated with the RNA integrity number (RIN) and positively correlated with the ischemic time. The latter variable was negatively correlated with the RNA integrity number. This last result is easily interpreted: the RIN is a measure of RNA quality in the sample. If the ischemic time is large, the sample has more time to "degrade", thus decreasing the RNA integrity.

```{r}
#| label: fig-correlation
#| fig-cap: Pairs plot of the continuous clinical and technical covariates for the samples separated by sex. The lower diagonal shows the scatter plots of each pair of variables. The upper diagonal indicates the Pearson correlation coefficients of the variabes considering all the samples (grey), or for the samples separated by sex (F = Female, M = Male). Statistical significance of the correlation is indicated by an asterisk (*** for p-value p < 0.001, ** for p < 0.01, * for p < 0.05, and . for p < 0.10).
#| fig-asp: 0.8
#| fig-pos: "H"


covariates |>
  select(AGE_CONTINUOUS, RNA_INTEGRITY_NUMBER, ISCHEMIC_TIME, HISTO_DI, RNA_DI) |> 
  ggpairs(aes(col = covariates$SEX, alpha = 0.5), 
          progress = FALSE,
          diag = NULL)
```


To check whether some technical variables were possibly confounding the dimorphism indices and
clinical variables, a PCA was performed on the 500 genes with the highest variance. Moreover, a variance stabilizing transformation was applied to the counts after adding a pseudo-count of 1 to every entry of the count matrix (to avoid calculating $\log(0)$). Afterwards, the first two principal components were plotted, and the points, representing the individuals / samples / donors, were colored according to the variable of interest. If a clustering (for categorical variables) or a clear gradient (for continuous variables) appears along the first and/or second principal component(s), this indicates that the variable of interest is probably a significant source of variation that affects counts.

First, in [@fig-pca_sex]a, we see a separation of the samples according to their sex along the first principal component. In [@fig-pca_sex]b and [@fig-pca_sex]c, the samples were first separated by their sex before performing the PCA and coloring the samples based on their dimorphism index (calculated from whole RNA-seq transcriptomes). For both plots at the bottom, a clear gradient can be seen along the first principal component. We also noticed that the male dimorphism index decreases along PC1, while the female dimorphism increases along PC1. (EXPLANATION?)
```{r}
#| message: false

mt <- match(colnames(RNA_counts_adjusted), covariates$SUBJID)

RNA_counts_ds <- DESeqDataSetFromMatrix(
  countData = RNA_counts_adjusted + 1,
  colData = covariates[mt, ],
  design = ~ 1 # no design yet, as we have to determine the confounding factors
)

vst_counts <- vst(RNA_counts_ds)

pca_sex <- plotPCA(vst_counts, intgroup = c("SEX"), ntop = 500) +
  coord_fixed() +
  aes(alpha = 0.8) +
  scale_color_discrete(name = "Sex") +
  guides(alpha = "none")
```

```{r}
#| label: fig-pca_sex
#| fig-cap: First two principal components of the PCA performed on the 500 most variant genes in the entire data set **(a)** or in male and feamle subsets (**b** and **c**). The samples are colored either by sex **(a)**, by the male RNA-derived dimorphism index **(b)** or female RNA-derived dimorphism index **(c)**.
#| out-width: "60%"
#| message: false
#| fig-pos: "H"


PCA_rnadi_M <- vst_counts[,colData(vst_counts)$SEX == "M"] |> 
  plotPCA(intgroup = c("RNA_DI"), ntop = 500) +
  scale_color_continuous(type = "viridis", name = "RNA DI") +
  coord_fixed() +
  ggtitle("Males")

PCA_rnadi_F <- vst_counts[,colData(vst_counts)$SEX == "F"] |> 
  plotPCA(intgroup = c("RNA_DI"), ntop = 500) +
  scale_color_continuous(type = "viridis", name = "RNA DI") +
  coord_fixed() +
  ggtitle("Females")


p1 <- pca_sex + plot_layout(guides = "collect") + theme(legend.position = "right")
p2 <- PCA_rnadi_M
p3 <- PCA_rnadi_F

bottom_row <- (p2 + p3 + plot_layout(guides = "collect")) & 
  theme(legend.position = 'bottom')


p1 / bottom_row + 
  plot_layout(heights = c(1, 1)) +
  plot_annotation(tag_levels = "a")

```

In [@fig-pca_hardy_scale]a and [@fig-pca_hardy_scale]b, the same PCA was performed as in [@fig-pca_sex]b and [@fig-pca_sex]c but the samples were colored by the corresponding donor's age. For the males subset, no gradient was visible along PC1 and PC2 according to age. On the other hand, women of age below 40 seemed to cluster more to the right of the plot on [@fig-pca_hardy_scale]b. Therefore, age could be a confounding factor for the female dimorphism index. 

On [@fig-pca_hardy_scale]c, the dots were colored by the Hardy scale, which is related to the cause of death. A separation between samples with a Hardy scale of 0 and 2 can be seen. Since this separation occured along the first principal component like the male and female dimorphism indices, the Hardy scale could be a confounding factor as differences in the data due to the Hardy scale value could be attributed to the sex, and vice versa.

```{r}
#| label: fig-pca_hardy_scale
#| fig-cap: First two principal components of the PCA performed on the 500 most variant genes in the male and female subsets (**a** and **b**) or in the entire data set **(c)**. The samples are colored either by age (**a** and **b**) or by Hardy scale (**c**).
#| out-width: "60%"
#| message: false
#| fig-pos: "H"


PCA_hardy <- plotPCA(vst_counts, intgroup = c("HARDY_SCALE"), ntop = 10000) +
  coord_fixed() +
  aes(alpha = 0.5) +
  scale_color_discrete(name = "Hardy scale") +
  guides(alpha = "none") + 
  plot_layout(guides = "collect") +
  theme(legend.position = "right")


PCA_age_M <- plotPCA(vst_counts[,colData(vst_counts)$SEX == "M"], intgroup = c("AGE_CONTINUOUS"), ntop = 500, pcsToUse = 1:2) +
  scale_color_continuous(type = "viridis", name = "Age (continuous)", alpha = 0.7) +
  coord_fixed() +
  ggtitle("Males")

PCA_age_F <- plotPCA(vst_counts[,colData(vst_counts)$SEX == "F"], intgroup = c("AGE_CONTINUOUS"), ntop = 500, pcsToUse = 1:2) +
  scale_color_continuous(type = "viridis", name = "Age (continuous)", alpha = 0.7) +
  coord_fixed() +
  ggtitle("Females")

top_row <- PCA_age_M + PCA_age_F + plot_annotation(tag_levels = "a") + 
  plot_layout(guides = "collect") & theme(legend.position = 'bottom')

top_row / PCA_hardy +
  plot_layout(heights = c(1, 1)) +
  plot_annotation(tag_levels = "a")
```

In conclusion, the following technical variables were taken into account for the differential gene expression analysis in the following section: `SEX, RNA_DI, AGE_CONTINUOUS` and `HARDY_SCALE`. The first two variables are of particular interest to us for this study, and the last two variables are potential confounders that are important to take into account and adjust for.

## Differential Gene Expression Analysis {#sec-dge_analysis}
In this section, we performed a differential gene expression analysis to identify genes that exhibited statistically significant differences in expression levels between two or more groups, or genes whose expression levels changed in relation to a continuous variable.

In this study, we were most interested in identifying the genes associated with the male and female dimorphism indices. We then aimed to identify genes that were differentially expressed in men compared to women. Finally, we determined which genes were associated with the confounding factors identified in the previous section, namely the age and the Hardy scale.

To obtain the following results, the design: `~ HARDY_SCALE + AGE_CONTINUOUS + SEX + SEX:RNA_DI` was used in `DESeq2`.


```{r Filtering the counts}
filtered_counts <- RNA_counts_adjusted |>
  rownames_to_column("gene") |> 
  as_tibble() |> 
  rowwise() |> 
  mutate(mad= c_across(2:ncol(RNA_counts_adjusted)) |> mad()) |> 
  ungroup() |> 
  slice_max(n = round(nrow(RNA_counts_adjusted) / 2), order_by = mad) |> 
  select(- mad) |> 
  as.data.frame() |> 
  column_to_rownames("gene")

```

```{r}
alpha <- 0.05

# Centering and scaling the continuous variables
non_na_covariates <- covariates

non_na_covariates$AGE_CONTINUOUS <- scale(non_na_covariates$AGE_CONTINUOUS, center = TRUE, scale = TRUE)

#non_na_covariates$RNA_DI <- scale(non_na_covariates$RNA_DI, center = TRUE, scale = TRUE)


mt <- match(colnames(filtered_counts), non_na_covariates$SUBJID)

# Creating the DESeq2 object with the filtered counts:
filtered_counts_ds <- DESeqDataSetFromMatrix(
  countData = filtered_counts,
  colData = non_na_covariates[mt, ],
  design = ~ HARDY_SCALE + AGE_CONTINUOUS + SEX + SEX:RNA_DI # Design decided in Q1
)
```

```{r running DESeq function}
#| message: false
filtered_counts_ds <- DESeq(filtered_counts_ds)

#resultsNames(filtered_counts_ds)
```
### Genes associated with the female and male dimorphism indices

```{r}
# Genes associated with the female dimorphism index

rna_di_F_res <- results(filtered_counts_ds, name = "SEXF.RNA_DI", alpha = alpha)

NotSig_F <- sum(rna_di_F_res$padj >= alpha, na.rm = TRUE)
Down_F <- sum(rna_di_F_res$padj <= alpha & rna_di_F_res$log2FoldChange < 0, na.rm = TRUE)
Up_F <- sum(rna_di_F_res$padj <= alpha & rna_di_F_res$log2FoldChange >= 0, na.rm = TRUE)

```

```{r}
# Genes associated with the male dimorphism index

rna_di_M_res <- results(filtered_counts_ds, name = "SEXM.RNA_DI", alpha = alpha)

NotSig_M <- sum(rna_di_M_res$padj >= alpha, na.rm = TRUE)
Down_M <- sum(rna_di_M_res$padj <= alpha & rna_di_M_res$log2FoldChange < 0, na.rm = TRUE)
Up_M <- sum(rna_di_M_res$padj <= alpha & rna_di_M_res$log2FoldChange >= 0, na.rm = TRUE)
```


All the genes tested for differential expression are shown as dots on the volcano plots in @fig-volcano_plot_di. For both male and female dimorphism indices (DI), the majority of genes tested were statistically significantly associated with the indices (`r (Down_M + Up_M) / (Down_M + Up_M + NotSig_M) * 100 |> round(2)`% of genes for the male DI, and `r (Down_F + Up_F) / (Down_F + Up_F + NotSig_F) * 100 |> round(2)`% for the female DI). We also noticed that, for the female DI, the majority of differently expressed genes had expression levels that were negatively associated with the female DI, while the majority of differently expressed genes were positively associated with the male DI. Among the down-regulated genes with the lowest adjusted p-values for the female DI, some were also found to be among the up-regulated genes with the lowest adjusted p-values for the male ID. This included genes such as GARNL3, ARHGEF25 or DBNDD2. 

```{r}
#| label: fig-volcano_plot_di
#| out-width: "80%"
#| fig-pos: "H"
#| fig-cap: "Volcano plots showing differential gene expression analysis results for the female **(a)** and male **(b)** dimorphism indices. Differential expression was assessed using Wald tests with multiple testing correction (Benjamini-Hochberg method). Genes meeting the significance threshold (FDR < 0.05) are color-coded according to the direction of change: up-regulated genes with a positive log2 fold change (FC) are colored in blue, while down-regulated genes with a negative log2 FC are colored in red. For both plots, the 20 genes with the lowest adjusted p-values are labelled."

volcano_di <- volcano_plot(rna_di_F_res, "Female RNA Dimorphism Index") +
  volcano_plot(rna_di_M_res, "Male RNA Dimorphism Index") +
  plot_annotation(tag_levels = "a")

volcano_di
```

To find whether this overlap between genes that are negatively associated with the female DI and positively associated with the male DI was also true for the other significant genes, we plotted a Venn diagram (see @fig-venn) showing the overlap between the up- and down-regulated genes for both male and female DIs. And indeed, there is a substantial overlap of 4676 genes that were positively associated with the male DI but negatively associated with the female DI. Conversely, 1112 genes were negatively associated with the male DI but positively with the female DI. The number of genes that were regulated the same way according to the two DIs was much lower, with just 12 genes positively associated with both male and female DIs, and 99 genes down-regulated according to both DIs.

INTERPRETATION


```{r}
#| label: fig-venn
#| fig-cap: Venn diagram showing the overlap in genes that were up- and down-regulated in men and women according to the male and female dimoprhism indices.
#| out-width: "60%"
#| fig-pos: "H"

# Up- and down-regulated genes according to dimorphism index in females
set_up_F <- rna_di_F_res |> 
  as.data.frame() |> 
  filter(padj < alpha & log2FoldChange > 0) |> 
  rownames()

set_down_F <- rna_di_F_res |> 
  as.data.frame() |> 
  filter(padj < alpha & log2FoldChange < 0) |> 
  rownames()

set_di_F <- c(set_up_F, set_down_F)

# Up- and down-regulated genes according to dimorphism index in males
set_up_M <- rna_di_M_res |> 
  as.data.frame() |> 
  filter(padj < alpha & log2FoldChange > 0) |> 
  rownames()

set_down_M <- rna_di_M_res |> 
  as.data.frame() |> 
  filter(padj < alpha & log2FoldChange < 0) |> 
  rownames()

set_di_M <- c(set_up_M, set_down_M)

venn_cols <- hue_pal()(4)

venn.plot <- venn.diagram(
  x = list(up_F = set_up_F, down_F = set_down_F, up_M = set_up_M, down_M = set_down_M),
  category.names = c("Females Up", "Females Down", "Males Up", "Males Down"),
  filename = NULL,
  fill = venn_cols,
  col = venn_cols,
  fontfamily = "sans",
  # Set names
  cat.cex = 1,
  cat.fontface = "bold",
  cat.default.pos = "outer",
  cat.fontfamily = "sans",
  cat.col = venn_cols,
  height = 480,
  width = 480,
  scaled = TRUE
)

# Plot the Venn diagram
grid.newpage()
grid.draw(venn.plot)
```


### Genes associated with sex, and other technical and clinical covariates

[@fig-volcano_plot_age]a shows the baseline difference between males and females, i.e., the genes that were differently expressed when the dimorphism index is null. It can be interpreted as the differentially expressed genes for individuals that are equally similar to other same-sex and opposite-sex individuals in terms of their overall transcriptomes (?). In order to determine the main effect of sex, i.e., determine which genes are differentially expressed in males and females regardless of the value of the dimorphism indices, another design, `~ HARDY_SCALE + AGE_CONTINUOUS + SEX` would have to be used. However, the results for the Hardy scale and the age would also change, making the results more difficult to interpret. The results using this alternative design are shown in the annex in @sec-annex_alt.



```{r}
sex_res <- results(filtered_counts_ds, contrast = c("SEX", "M", "F")) # log2 Fold-Change = Male / Female

NotSig_SEX <- sum(sex_res$padj >= alpha, na.rm = TRUE)
Dow_SEX <- sum(sex_res$padj <= alpha & sex_res$log2FoldChange < 0, na.rm = TRUE)
Up_SEX <- sum(sex_res$padj <= alpha & sex_res$log2FoldChange > 0, na.rm = TRUE)

# Showing the results
sex_res_df <- data.frame("SEX_M_vs_F" = c(Dow_SEX, NotSig_SEX, Up_SEX))
rownames(sex_res_df) <- c("Down", "NotSig", "Up")
#sex_res_df |> gt(rownames_to_stub = TRUE)

volcano_plot_sex <- volcano_plot(sex_res, "Sex")
```


```{r}
age_res <- results(filtered_counts_ds, name = "AGE_CONTINUOUS", alpha = alpha)

NotSig_AGE <- sum(age_res$padj >= alpha, na.rm = TRUE)
Down_AGE <- sum(age_res$padj <= alpha & age_res$log2FoldChange < 0, na.rm = TRUE)
Up_AGE <- sum(age_res$padj <= alpha & age_res$log2FoldChange > 0, na.rm = TRUE)

# Showing the results
age_res_df <- data.frame("AGE_CONTINUOUS" = c(Down_AGE, NotSig_AGE, Up_AGE))
rownames(age_res_df) <- c("Down", "NotSig", "Up")
#age_res_df |> gt(rownames_to_stub = TRUE)
```

When the dimorphism indices was equal to 0, many genes were still considered to be differently expressed: `r Up_SEX` genes were up-regulated in males compared to males, while `r Dow_SEX` genes were more strongly expressed in females compared to males. However, the amplitude of the log2 fold change is below 1 (in absolute value) for most of the significant genes, meaning that, while the difference in gene expression may be statistically significant, it may not be biologically relevant.

Conversely, a relatively small number of genes (`r (Up_AGE + Down_AGE) / (Up_AGE + Down_AGE + NotSig_AGE) * 100 |> round(2)`% of tested genes) were associated with age ([@fig-volcano_plot_age]b).


```{r}
#| label: fig-volcano_plot_age
#| out-width: "80%"
#| fig-pos: "H"
#| fig-cap: "Volcano plots showing differential gene expression analysis results for the age (continuous) **(a)** and sex **(b)** covariates. Differential expression was assessed using Wald tests with multiple testing correction (Benjamini-Hochberg method). Genes meeting the significance threshold (FDR < 0.05) are color-coded according to the direction of change: up-regulated genes with a positive log2 fold change (FC) are colored in blue, while down-regulated genes with a negative log2 FC are colored in red. For both plots, the 20 genes with the lowest adjusted p-values are labelled.  A positive log2 Fold Change for the sex covariate indicates that genes are more expressed in males than females, and a negative log2 Fold Change indicates the opposite."


volcano_plot_sex + volcano_plot(age_res, "Age (continuous)") + plot_annotation(tag_levels = "a")
```
Finally, @fig-boxplot_hardy shows the results of the DGE analysis for the Hardy scale covariate.

```{r}
#| label: fig-boxplot_hardy
#| fig-cap: (a) Vocano plot Hardy scale (b) Top 9 genes with lowest adjusted p-value for the likelihood ratio test on Hardy scale covariate
#| out-width: "90%"
#| fig-pos: "H"
#| message: false


dds_lrt <- DESeq(filtered_counts_ds, test = "LRT", reduced = ~ AGE_CONTINUOUS + SEX + SEX:RNA_DI)
res_lrt <- results(dds_lrt)

volcano_plot_hardy <- volcano_plot(res_lrt, "")

sig_hardy_genes <- res_lrt |> 
  as.data.frame() |> 
  slice_min(order_by = padj, n = 9) |> 
  rownames()

fcounts_long <- filtered_counts |> rownames_to_column("gene_id") |> 
  pivot_longer(cols = - gene_id, names_to = "SUBJID", values_to = "counts")

fcounts_long <- left_join(fcounts_long, covariates |> select(SUBJID, HARDY_SCALE), by = "SUBJID")

boxplot_hardy <- fcounts_long |> 
  filter(gene_id %in% sig_hardy_genes) |> 
  ggplot(aes(x = HARDY_SCALE, y = counts, fill = HARDY_SCALE)) +
  geom_boxplot(outlier.size = 0.8, outlier.alpha = 0.6) +
  facet_wrap(~ gene_id, scales = "free_y", ncol = 3) +
  labs(x = "Hardy Scale",
       y = "Raw Counts") +
  theme(legend.position = "bottom")


volcano_plot_hardy + boxplot_hardy + plot_annotation(tag_levels = "a")
```





## Interpretation of the DI-associated transcriptome
### Hormone Receptors Associated with the Dimorphism Indices and with Sex

```{r}
# Importing the csv file
horm_receptors <- read.csv("data/results_hgnc_hormone_rcpt_strict.csv", sep = "\t")

# Significant genes
all_genes <- rownames(rna_di_F_res)

sig_di_f_genes <- rna_di_F_res |>  as.data.frame() |> 
  filter(padj <= alpha) |> 
  rownames()

sig_di_m_genes <- rna_di_M_res |>  as.data.frame() |> 
  filter(padj <= alpha) |> 
  rownames()

sig_sex_genes <- sex_res |>  as.data.frame() |> 
  filter(padj <= alpha) |> 
  rownames()


# Receptors found among the differentially expressed genes for the DIs and sex
# Indices in the recpetors data frame
f_di_index <- horm_receptors$Approved.symbol %in% sig_di_f_genes
m_di_index <- horm_receptors$Approved.symbol %in% sig_di_m_genes
sex_index <- horm_receptors$Approved.symbol %in% sig_sex_genes

# Significant receptor names
f_di_rcpt <- horm_receptors[f_di_index, "Approved.name"] |> unique()
m_di_rcpt <- horm_receptors[m_di_index, "Approved.name"] |> unique()
sex_rcpt <- horm_receptors[sex_index, "Approved.name"] |> unique()

# All significant receptor names
sig_rcpt <- unique(c(f_di_rcpt, m_di_rcpt, sex_rcpt))

# gene names of the significant receptors
f_di_rcpt_genes <- horm_receptors[f_di_index, "Approved.symbol"] |> unique()
m_di_rcpt_genes <- horm_receptors[m_di_index, "Approved.symbol"] |> unique()
sex_rcpt_genes <- horm_receptors[sex_index, "Approved.symbol"] |> unique()

rcpt_genes <- unique(c(f_di_rcpt_genes, m_di_rcpt_genes, sex_rcpt_genes))

# Fold changes of the significant receptors
f_di_rcpt_FC <- rna_di_F_res[rcpt_genes, "log2FoldChange"]
m_di_rcpt_FC <- rna_di_M_res[rcpt_genes, "log2FoldChange"]
sex_rcpt_FC <- sex_res[rcpt_genes, "log2FoldChange"]

# Creating the data frame to plot
rcpt_df <- data.frame(
  # Fold change of that receptor according to the Wald tests
  "receptor_name" = sig_rcpt,
  "Female_DI" = f_di_rcpt_FC,
  "Male_DI" = m_di_rcpt_FC,
  "SEX" = sex_rcpt_FC,
  # Is the gene significant or not?
  "F_DI_sig" = rcpt_genes %in% f_di_rcpt_genes,
  "M_DI_sig" = rcpt_genes %in% m_di_rcpt_genes,
  "SEX_sig" = rcpt_genes %in% sex_rcpt_genes
)
```

```{r}
#| label: fig-receptors
#| fig-cap: Hormonal receptors associated with the female and male dimorphism indices and the sex. Color corresponds to the fold change (determined in previous section). Grey color given to receptors that were not significantly associated with the variable.
#| out-width: "90%"
#| fig-pos: "H"
#| message: false

rcpt_long <- rcpt_df |>
  pivot_longer(
    cols = c(Female_DI, Male_DI, SEX),
    names_to = "covariate",
    values_to = "fold_change"
  ) |>
  mutate(sig = case_when(
    covariate == "Female_DI" ~ F_DI_sig,
    covariate == "Male_DI" ~ M_DI_sig,
    covariate == "SEX" ~ SEX_sig
  ))

ggplot(rcpt_long, aes(x = covariate, y = receptor_name)) +
  geom_tile(aes(fill = ifelse(sig, fold_change, NA))) +
  scale_fill_gradientn(
    name = "Fold change",
    colors = c("blue", "white", "red"),
    values = scales::rescale(c(min(rcpt_long$fold_change), 0, max(rcpt_long$fold_change))),
    na.value = "grey50"
  ) +
  theme_minimal() +
  labs(fill = "Fold change", x = "Variable", y = "Receptor Name") +
  scale_y_discrete(limits=rev)
```




### Gene Set Enrichment Analysis
```{r}
# Importing the REACTOME GMT file

gmt.file <- "resources/c2.cp.reactome.v2024.1.Hs.symbols.gmt"
reactome <- gmtPathways(gmt.file)

# Female dimorphism index - genes ranked by log2 FC
ranked_genes_di_F <- rna_di_F_res$log2FoldChange
names(ranked_genes_di_F) <- rownames(rna_di_F_res)
ranked_genes_di_F <- sort(ranked_genes_di_F, decreasing = TRUE)

# Male dimorphism index
ranked_genes_di_M <- rna_di_M_res$log2FoldChange
names(ranked_genes_di_M) <- rownames(rna_di_M_res)
ranked_genes_di_M <- sort(ranked_genes_di_M, decreasing = TRUE)

# Sex
ranked_genes_sex <- sex_res$log2FoldChange
names(ranked_genes_sex) <- rownames(sex_res)
ranked_genes_sex <- sort(ranked_genes_sex, decreasing = TRUE)
```


### Female and Male Dimorphism indices

```{r}
#| label: fig-gsea_di_f
#| out-width: "80%"
#| fig-cap: Results of fgsea for the female dimorphism index
#| fig-pos: "H"

set.seed(1)

fgsea_results_di_F <- fgsea(
    pathways = reactome,
    stats = ranked_genes_di_F,
    minSize = 15,
    maxSize = Inf,
    nPermSimple = 100000
)

gsea_res_plots(fgsea_results_di_F)

```

```{r}
#| label: fig-gsea_di_m
#| out-width: "80%"
#| fig-cap: Results of fgsea for the male dimorphism index
#| fig-pos: "H"

set.seed(1)

fgsea_results_di_M <- fgsea(
    pathways = reactome,
    stats = ranked_genes_di_M,
    minSize = 15,
    maxSize = Inf
)

topPathwaysUp_M <- fgsea_results_di_M |> filter(ES > 0 & padj < alpha)
topPathwaysDown_M <- fgsea_results_di_M |> filter(ES < 0 & padj < alpha)

# Plots of the results
gsea_res_plots(fgsea_results_di_M)
```



```{r}
#| label: fig-gsea_sex
#| out-width: "80%"
#| fig-cap: Results of fgsea for sex
#| fig-pos: "H"

set.seed(1)

fgsea_results_sex <- fgsea(
    pathways = reactome,
    stats = ranked_genes_sex,
    minSize = 15,
    maxSize = Inf,
    nPermSimple = 10000
)

topPathwaysUp_sex <- fgsea_results_sex |> filter(ES > 0 & padj < alpha)
topPathwaysDown_sex <- fgsea_results_sex |> filter(ES < 0 & padj < alpha)

# Plots of the results
gsea_res_plots(fgsea_results_sex)
```




# Discussion and Conclusion {#sec-discussion_and_conclusion}

- The fact that the sexual dimorphism index has a different meaning for men and women makes its use in statistical "tests" more difficult, such as the choice of the design for DESeq2 DGE analysis.

- GSEA: the ranking of the genes passed to the fgsea algorithm can be based on different statistics (log2FC, test statistic, adjusted p-value, log2FC * (log10(padj))), and the choice of this ranking changes the results of GSEA, making interpretation of results difficult.


# Annexes {#sec-annexes}
## Alternative design for DGE analysis {#sec-annex_alt}

Alternative design to determine the overall effect of sex, without controlling for the dimorphism indices: `~ HARDY_SCALE + AGE_CONTINUOUS + SEX`

```{r}
# Alternative design
filtered_counts_ds_alt <- DESeqDataSetFromMatrix(
  countData = filtered_counts,
  colData = non_na_covariates[mt, ],
  design = ~ HARDY_SCALE + AGE_CONTINUOUS + SEX
)
```

```{r running DESeq function alternative}
#| message: false
filtered_counts_ds_alt <- DESeq(filtered_counts_ds_alt)

#resultsNames(filtered_counts_ds_alt)
```

New volcano plots for sex and age:

```{r}
sex_res <- results(filtered_counts_ds_alt, contrast = c("SEX", "M", "F")) # log2 Fold-Change = Male / Female

NotSig_SEX <- sum(sex_res$padj >= alpha, na.rm = TRUE)
Dow_SEX <- sum(sex_res$padj <= alpha & sex_res$log2FoldChange < 0, na.rm = TRUE)
Up_SEX <- sum(sex_res$padj <= alpha & sex_res$log2FoldChange > 0, na.rm = TRUE)

# Showing the results
sex_res_df <- data.frame("SEX_M_vs_F" = c(Dow_SEX, NotSig_SEX, Up_SEX))
rownames(sex_res_df) <- c("Down", "NotSig", "Up")
#sex_res_df |> gt(rownames_to_stub = TRUE)

volcano_plot_sex <- volcano_plot(sex_res, "Sex")
```

```{r}
age_res <- results(filtered_counts_ds_alt, name = "AGE_CONTINUOUS", alpha = alpha)

NotSig_AGE <- sum(age_res$padj >= alpha, na.rm = TRUE)
Dow_AGE <- sum(age_res$padj <= alpha & age_res$log2FoldChange < 0, na.rm = TRUE)
Up_AGE <- sum(age_res$padj <= alpha & age_res$log2FoldChange > 0, na.rm = TRUE)

# Showing the results
age_res_df <- data.frame("AGE_CONTINUOUS" = c(Dow_AGE, NotSig_AGE, Up_AGE))
rownames(age_res_df) <- c("Down", "NotSig", "Up")
#age_res_df |> gt(rownames_to_stub = TRUE)
```

```{r}
#| label: fig-volcano_plot_alt
#| out-width: "80%"
#| fig-pos: "H"
#| fig-cap: "Volcano plots showing differential gene expression analysis results for the age (continuous) **(a)** and sex **(b)** covariates. Differential expression was assessed using Wald tests with multiple testing correction (Benjamini-Hochberg method). Genes meeting the significance threshold (FDR < 0.05) are color-coded according to the direction of change: up-regulated genes with a positive log2 fold change (FC) are colored in blue, while down-regulated genes with a negative log2 FC are colored in red. For both plots, the 20 genes with the lowest adjusted p-values are labelled."


volcano_plot_sex + volcano_plot(age_res, "Age (continuous)") + plot_annotation(tag_levels = "a")
```


```{r}
#| label: fig-boxplot_hardy_alt
#| fig-cap: (a) Vocano plot Hardy scale (b) Top 9 genes with lowest adjusted p-value for the likelihood ratio test on Hardy scale covariate
#| out-width: "90%"
#| fig-pos: "H"
#| message: false


dds_lrt_alt <- DESeq(filtered_counts_ds_alt, test = "LRT", reduced = ~ AGE_CONTINUOUS + SEX)
res_lrt <- results(dds_lrt_alt)

volcano_plot_hardy <- volcano_plot(res_lrt, "")

sig_hardy_genes <- res_lrt |> 
  as.data.frame() |> 
  slice_min(order_by = padj, n = 9) |> 
  rownames()

fcounts_long <- filtered_counts |> rownames_to_column("gene_id") |> 
  pivot_longer(cols = - gene_id, names_to = "SUBJID", values_to = "counts")

fcounts_long <- left_join(fcounts_long, covariates |> select(SUBJID, HARDY_SCALE), by = "SUBJID")

boxplot_hardy <- fcounts_long |> 
  filter(gene_id %in% sig_hardy_genes) |> 
  ggplot(aes(x = HARDY_SCALE, y = counts, fill = HARDY_SCALE)) +
  geom_boxplot(outlier.size = 0.8, outlier.alpha = 0.6) +
  facet_wrap(~ gene_id, scales = "free_y", ncol = 3) +
  labs(x = "Hardy Scale",
       y = "Raw Counts") +
  theme(legend.position = "bottom")


volcano_plot_hardy + boxplot_hardy + plot_annotation(tag_levels = "a")
```


## Session Information {#sec-session_info}

```{r}
sessionInfo()
```

